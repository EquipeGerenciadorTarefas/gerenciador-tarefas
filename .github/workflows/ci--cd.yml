name: Pipeline CI/CD - Gerenciador de Tarefas

on:
  push:
    branches: [ main ]

env:
  EMAIL_DESTINO: ${{ secrets.DESTINATION_EMAIL }} 

jobs:
  # 1. Job de Testes e Geração de Relatórios
  testes:
    name: 1. Execucao de Testes Unitarios
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do codigo
        uses: actions/checkout@v4 
      - name: Configurar Java 17
        uses: actions/setup-java@v4 
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Executar Testes (22+ cenários)
        run: mvn test
      - name: Armazenar Relatorio de Testes (Artefato)
        uses: actions/upload-artifact@v4
        with:
          name: relatorio-testes
          path: target/surefire-reports/

  # 2. Job de Build (Empacotamento)
  build:
    name: 2. Empacotamento JAR
    runs-on: ubuntu-latest
    needs: testes # Roda somente se os testes tiverem sucesso (Prática CI/CD)
    steps:
      - name: Checkout do codigo
        uses: actions/checkout@v4 
      - name: Criar Pacote JAR
        run: mvn package -DskipTests
      - name: Armazenar Pacote JAR (Artefato)
        uses: actions/upload-artifact@v4 
        with:
          name: pacote-jar
          path: target/*.jar

  # 3. Job de Notificação
  notificacao:
    name: 3. Notificacao Final por Email
    runs-on: ubuntu-latest
    needs: [testes, build] # Espera que os dois anteriores terminem
    if: always() # Garante que rode mesmo se houver falha (para notificar a falha)
    steps:
      - name: Checkout do codigo e script
        uses: actions/checkout@v4 
      
      - name: Tornar script de email executavel
        # Presume que o script está em 'scripts/enviar_email.sh'
        run: chmod +x scripts/enviar_email.sh

      - name: Enviar Email de Status
        # Verifica o status dos jobs anteriores
        run: |
          TESTE_STATUS="${{ needs.testes.result }}"
          BUILD_STATUS="${{ needs.build.result }}"

          if [ "$TESTE_STATUS" == "success" ] && [ "$BUILD_STATUS" == "success" ]; then
            STATUS_FINAL="SUCESSO"
          else
            STATUS_FINAL="FALHA"
          fi
          
          # Chama o script e passa o status
          ./scripts/enviar_email.sh "$STATUS_FINAL"
        env:
          # Define a variável de ambiente para ser usada DENTRO do script Shell
          EMAIL_DESTINO: ${{ secrets.DESTINATION_EMAIL }}